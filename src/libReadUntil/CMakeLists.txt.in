cmake_minimum_required(VERSION 3.4)

project(gRPC-build NONE)

include(ExternalProject)


# Builds c-ares project from the git submodule.
ExternalProject_Add(c-ares
  GIT_REPOSITORY    https://github.com/c-ares/c-ares.git
  GIT_TAG           cares-1_16_1
  SOURCE_DIR "${CMAKE_CURRENT_BINARY_DIR}/c-ares"
  CMAKE_CACHE_ARGS
        -DCARES_SHARED:BOOL=OFF
        -DCARES_STATIC:BOOL=ON
        -DCARES_STATIC_PIC:BOOL=ON
        -DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_CURRENT_BINARY_DIR}/c-ares
)


# Builds protobuf project from the git submodule.
ExternalProject_Add(protobuf
  PREFIX protobuf
  GIT_REPOSITORY    https://github.com/protocolbuffers/protobuf.git
  GIT_TAG           v3.12.4
  SOURCE_DIR "${CMAKE_CURRENT_BINARY_DIR}/protobuf"
  SOURCE_SUBDIR cmake
  CMAKE_CACHE_ARGS
        -Dprotobuf_BUILD_TESTS:BOOL=OFF
        -Dprotobuf_WITH_ZLIB:BOOL=OFF
        -Dprotobuf_MSVC_STATIC_RUNTIME:BOOL=OFF
        -DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_CURRENT_BINARY_DIR}/protobuf
)


# Builds zlib project from the git submodule.
ExternalProject_Add(zlib
  PREFIX zlib
  GIT_REPOSITORY    https://github.com/madler/zlib.git
  GIT_TAG           master
  SOURCE_DIR "${CMAKE_CURRENT_BINARY_DIR}/zlib"
  CMAKE_CACHE_ARGS
        -DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_CURRENT_BINARY_DIR}/zlib
)

# the location where protobuf-config.cmake will be installed varies by platform
if (UNIX)
  set(_FINDPACKAGE_PROTOBUF_CONFIG_DIR "${CMAKE_CURRENT_BINARY_DIR}/protobuf/cmake")
else()
  set(_FINDPACKAGE_PROTOBUF_CONFIG_DIR "${CMAKE_CURRENT_BINARY_DIR}/gRPC-build/protobuf/src/protobuf-build/lib/cmake/protobuf")
endif()

set(Protobuf_DIR ${_FINDPACKAGE_PROTOBUF_CONFIG_DIR})

#ExternalProject_Add(openssl
#  PREFIX openssl
#  GIT_REPOSITORY    https://github.com/janbar/openssl-cmake.git
#  GIT_TAG           1.1.1g-20200510
#  SOURCE_DIR "${CMAKE_CURRENT_BINARY_DIR}/openssl"
#  CMAKE_CACHE_ARGS
#        -DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_CURRENT_BINARY_DIR}/openssl
#)



# Builds gRPC based on locally checked-out sources and set arguments so that all the dependencies
# are correctly located.
ExternalProject_Add(grpc
  PREFIX grpc
  GIT_REPOSITORY    https://github.com/grpc/grpc.git
  GIT_TAG           v1.30.0
  SOURCE_DIR "${CMAKE_CURRENT_BINARY_DIR}/grpc"
  CMAKE_CACHE_ARGS
        -DgRPC_INSTALL:BOOL=ON
        -DgRPC_BUILD_TESTS:BOOL=OFF
        -D_WIN32_WINNT:STRING=0x600
        -DgRPC_PROTOBUF_PROVIDER:STRING=package
        -DgRPC_PROTOBUF_PACKAGE_TYPE:STRING=CONFIG
        -DProtobuf_DIR:PATH=${CMAKE_CURRENT_BINARY_DIR}/protobuf/cmake
        -DgRPC_CARES_PROVIDER:STRING=package
        -Dc-ares_DIR:PATH=${CMAKE_CURRENT_BINARY_DIR}/c-ares/lib/cmake/c-ares
        -DgRPC_ZLIB_PROVIDER:STRING=package
        -DZLIB_ROOT:STRING=${CMAKE_CURRENT_BINARY_DIR}/zlib
        -DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_CURRENT_BINARY_DIR}/grpc
  DEPENDS c-ares protobuf zlib)



# Download of minknow-api
ExternalProject_Add(minknow
  PREFIX minknow
  GIT_REPOSITORY    https://github.com/nanoporetech/minknow_api.git
  GIT_TAG           master
  SOURCE_DIR "${CMAKE_CURRENT_BINARY_DIR}/minknow"
  CONFIGURE_COMMAND ""
  BUILD_COMMAND     ""
  INSTALL_COMMAND   ""
  TEST_COMMAND      ""
)

